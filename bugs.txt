- Need BSearch and QSort

- procedural rendering
	- static scene showing item combinations
	- emissive support
	- item bone/part support
	X re-organize the palette?
	X color variation 
	X color variation for live mode

- combat test scene	
	- bolts are hitting own team	
	- removing unit "clumping" (3yr old soccer team). Basic formation?
	- eval: kinetic damage of held weapons shouldn't be multiplied with mass (added)
	- properly hook up items and such, so that items, health, all be driven correctly
	- effects

	- unique look for units so teams can be distinguished
	- melee attack goes back to reference position between hits
	- buttons to select scenario, load items
	- animation speed isn't correct
	- adjust particles to have "impact" effect
	- add de-rez
	- flaming sword
	- flaming sword should catch things on fire
	- refactor code - if needed? - in AIComponent (the fixmes)
	- gunrun to walk not synchronized correctly
	- fix particle def to return a default - the pointer is dangerous
	X DebugDraw is getting used for release drawing - fine in most (all?) cases. But clean up.
	- revisit accuracy comuptation. what scales with distance? area? volume? radius?

	- ranged weapons
		- bolts
			- range
			- effect strength
			x damage (defined)
			x speed
			x compute color
		- accuracy
		- effect
		X reload time 'reload'
		X time per shot 'cooldown'
		X rounds in clip
	- AI (task AI)
		- establish friend vs. enemy
		- basic states
		- CA to handle friends and enemies
	- UI
		- set up different battles
		- battle results

	- serialization
	- error in ray-cast: detecting a 'tree' where it shouldn't (near the head of the prime)
	- add rez and de-rez effect for chits

	X hesitation when near melee target (probably squatted destination code kicking in)
	  (possibly shader kicking in: never seen it happen twice). Not actually fixed - may need
	  GL optimizer - but definitely the shader kicking in
	X weapons
		X relative positioning (implemented, broken again)
		X weapon definition - item question: how is a chit a weapon?
		X item d	X why does balrog just stand around not attacking mantis
	X ...and yet the AOE of melee seems huge. clean all that up.
	X human runs up to dummy, circles around it
	X data driven item creation
	X leaving guy standing after battle
	X debugging info for chit ticks
	X back in the tick system: the "need tick" vs. "no tick" changes. Note for 
	  example whether an item has effects applied. Or the kind of animation. Don't
	  want to tick granite chunks when they don't need it. Key concerns: 
	  Rendering, Item that changes tick status
	X melee attack standing too close 
	X avoiding while pathing doesn't look quite correct
	X need left/right team, not species based
	X animation/lack of making me crazy. What plan?
	X particle effect for melee strike not "connected" to character
	X item definition: one big wad of data? handle "inherited items"?
	X use space tree query for impacted items. Everything that has a spatial component
	  is now in the table, so this should be "fixed".
	X need to check rotation in the path component
	X load in the correct lighting
	X put in license header
	X push to altera site
	X balrog fire attack
	X visual debugging: line drawing. check bolt impacts.
	X impact (light/heavy)
	X heavy weapons should do knockback, not just amount of damage/explosion
	X change bolt color
	X item: support speed, pass on to bolts
	X optimize start time
	X change effect strategy - are all effects just flags?
	X shields, general bonus/cost/damage propegation
	X knife -> ring
	X bolts don't hit own team but explosions do. decided this was a good thing.

- animition aware hit testing
- bounds need to be adjusted to account for animation
- cameras only self-delete if they reach destination; should do better. Probably
  should only be one camera in existence. (BlueSmoke, NavTest2)
- record perf max/min. surprisingly hard.
- shadows should be part of space-tree bounds
- memory pool everything in the chit/component system
- analyze/optimize what causes component update: DoTick(), etc. Likely many DoTicks() getting called that aren't needed. (especially rendering...)
- use optimizer to pre-process shaders


** ECR **

** Defer **
- bolt: glow around white core? end caps?
- particles that aren't quads (beziers)
- pack animation bone info into shaders

----------- FIXED -------------

X the render::Item class doesn't make much sense any more. should probaly just be a reference to the Model
X what is going on with engine state when there are 2 textures?
X RenderState search is reversed
X clean up shields
X move EngineShaders local
X one item array
X extend rendering test to animation
X output drawcalls per state
X clean up instance rendering
X particle test scene
	X alpha processing for additive blending
	D particle groups (ex: fire)
X ECR: proper rotation support
X feature: Animation
	X figure out animation needs (standing, walking, sidestep, shooting, etc.)
	X define skeletal animation export
	X modify shaders
	X blend animations
X rotation: in spatial component? Matrix or Quat?
X NavTest-1 is broken. More container fallout. And once again an existing bug
  revealed by tighter container code.
X container to support copy semantics
X remove particle params not needed for world
X move lighting loading from render test scene to engine
X Animation
	X support for instancing
	X particle tracking of meta-data
	X item tracking of meta-data
	X timing of impact / shoot / hit events
	X need impact animation (light & heavy?)
	X remove rotation twist for ortho
	X animation rate
	X cross fading
	X revisit all scenes, add animation
		X Where does animation fit in? walk, gun-run, impact-, melee
		X Render: query walking/standing from Move component?
		X The AnimatedRenderComponent is annoying - move code to RenderComponent
X blur: switch to "down blit" approach, optionally
X Blue Smoke Map Test
	X full size (1024x1024), 2000 units
		X faster avoidance
			X separate avoid queries from spatial queries
			X hash scheme needs work
		X faster Model::Update
			X don't re-link if possible on update. model probably is in the same node.
			X faster AABB calc? are we using normals? should we?
			D don't update things well outside the rendering area? switch to local rendering?
			D re-tune tree size
			X switch to sphere testing. avoid flushing the AABB entirely
	X need to get to 2000 faster
	X entity debug system: point at chit, get component info
	X some units get stuck and never move (pathing fails & doesn't re-start?)
	X fix camera code
	X need a mini-map
	X filling of path cache: correct? why does the cache keep incrementing? what should the game do when it's full?
	X show region code
	D profiler max-ing out
	D much better test bitmap
	X 2 continents
	X bridge

X pathing
	X record path miss in cache
	X test cache miss 
	X print cache use
X navigation scene
	X map with pathing
	X chits & components
	X debugging components for showing collision/vectors
	X ground flocking motion
	X different size unitsX PathMoveComponent: can get blocked if 'dest' is being squatted by a unit.
X chits, components
X rotation: in spatial component? Matrix or Quat?
X move particle system to engine
X particle textures "popping in" (fix: was incorrectly passing 3 components in the attributes)
x instance scene
	x shadows
	x glow
	x hemispherical lighting
X desktop (art):
	X light model
	X test models
X streamline render atom creation
X work out atom usage
X create dialog scene
	X standard layout
	X automatic callback
	X drag / drop
X move Engine to Scene / move engine to correct place
X draw dude on map
	X with shader
	X clean up opengl = 2
X convert to tinyxml2


Baseline
#define TEXTURE0 1
#define TEXTURE0_ALPHA_ONLY 0
#define TEXTURE0_TRANSFORM 0
#define TEXTURE1 0
#define COLOR_PARAM 0
#define COLORS 0
#define COLOR_MULTIPLIER 0
#define INSTANCE 1
#define PREMULT 0
#define EMISSIVE 0
#define EMISSIVE_EXCLUSIVE 0
#define BONE_FILTER 0
#define BONES 0
#define PARAM 0
#define LIGHTING_DIFFUSE 1
#define EL_MAX_INSTANCE 16
#define EL_MAX_BONES 12

CreateProgram flags=7169 665 msec total=2016
CreateProgram flags=7169 681 msec total=1901
CreateProgram flags=7169 685 msec total=1987

Remove shader info log query:
CreateProgram flags=7169 682 msec total=2130	// good! does nothing

Use one file instead of separate header and source:
CreateProgram flags=7169 680 msec total=2067	// does nothing, but more surprising

Remove the 2 constants.
CreateProgram flags=7169 672 msec total=1917	// still does nothing

Trim down the program to minimal compilation.
CreateProgram flags=7169 690 msec total=2239	// this is just weird
CreateProgram flags=7169 675 msec total=2009
CreateProgram flags=7169 691 msec total=2079

Updated Driver. *sigh*
CreateProgram flags=7169 779 msec total=2086

Caching, first run:
CreateProgram flags=7169 803 msec total=2393	// write to disk included
CreateProgram flags=7169 864 msec total=1755	// AACCK stupid intel driver doesn't support extension

Desktop, caching on:
CreateProgram flags=7169 2 msec total=20
CreateProgram flags=7169 3 msec total=25
Desktop, caching off:
CreateProgram flags=7169 72 msec total=873	// Huge success! If only it worked on laptop.
CreateProgram flags=7169 89 msec total=772	// Pull out color mult

But on the desktop, 40X (yes 40) faster:
