# create a blur shader.

import sys;

print "Usage: blurmaker radius"

def writeTaps( useY ):
	for i in range(len(row)):
		r = float( i ) / float(len(row)-1) - 0.5
		offset = r * radius * 2.0;
		weight = float( row[i] ) / float( sum )
		op = "+"
		if ( offset < 0 ):
			op = "-";
			offset = -offset;
		
		if useY == 0:
			file.write( "color += texture2D( texture0, v_uv0 " + op + " vec2( " + str( round(offset, 5)) + " , 0.0 ) ) * " + str( round(weight, 5)) + ";\n")
		else:
			file.write( "color += texture2D( texture0, v_uv0 " + op + " vec2( 0.0, " + str( round(offset, 5)) + " )) * " + str( round(weight, 5)) + ";\n")
		
radius = float( sys.argv[1] )

#excerpt from row 11
#row = [ 55, 165, 330, 462, 462, 330, 55 ];
#excerpt from row 12
#row = [ 66, 220, 495, 792, 924, 792, 495, 220, 66 ]
# excerpt from row 13
row = [ 78, 186, 715, 1287, 1716, 1716, 1287, 715, 186, 78 ];	

file = open( "blur.frag", "w" )

file.write( "// WARNING: generated by blurmaker.py\n" )
file.write( "uniform sampler2D texture0;\n" )
file.write( "varying vec2 v_uv0;\n\n" )
file.write( "void main() {\n" )
file.write( "vec4 color=vec4(0.0, 0.0, 0.0, 0.0 );\n\n" )

sum = 0
for i in range(len(row)):
	sum += row[i]

file.write( "#if BLUR_Y == 0\n\n" );
writeTaps( 0 );
file.write( "\n#else\n\n" )
writeTaps( 1 );
file.write( "\n#endif\n" );
	
file.write( "\ngl_FragColor=color;\n" )
file.write( "}\n" )

